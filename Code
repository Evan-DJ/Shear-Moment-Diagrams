import numpy as np
import matplotlib.pyplot as plt

def shear_moment_diagram(loads, length):
    # Calculate reactions at supports
    total_force = sum(load[1] for load in loads)
    moment_left = sum(load[0] * load[1] for load in loads)
    reaction_right = moment_left / length
    reaction_left = total_force - reaction_right

    # Generate x-coordinates along the beam
    x = np.linspace(0, length, 100)

    # Calculate shear and moment values at each x-coordinate
    shear = np.zeros_like(x)
    moment = np.zeros_like(x)

    for i in range(len(x)):
        shear[i] = reaction_left
        moment[i] = reaction_left * x[i]

        for load_dist, load_force in loads:
            if x[i] > load_dist:
                shear[i] -= load_force
                moment[i] -= load_force * (x[i] - load_dist)

    # Plot shear and moment diagrams
    fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 6))

    ax1.plot(x, shear)
    ax1.set_ylabel('Shear Force (N)')
    ax1.set_title('Shear Force Diagram')
    ax1.grid(True)

    ax2.plot(x, moment)
    ax2.set_xlabel('Distance (m)')
    ax2.set_ylabel('Bending Moment (Nm)')
    ax2.set_title('Bending Moment Diagram')
    ax2.grid(True)

    plt.tight_layout()
    plt.show()

# Example
loads = [(3, 1500), (6, 50), (9, 75)] 
length = 10

shear_moment_diagram(loads, length)
